// Generated by CoffeeScript 1.12.7
var doButtonDisable, doButtonEnable, doButtonStart, doButtonStop, ending, generateRoulette, normalize, rand, randf, result, rotateRoulette, start, stop;

window.CONST = {
  FONT_SIZE: 50,
  SPEED_RAD: (Math.PI * 2) / 3,
  SPEED_RAD_ENDING: (Math.PI * 2) / 30,
  ROLL_DIRECTION_IS_CLOCK: false,
  FPS: 60
};

window.alternatives = [];

window.timer = false;

window.rotate = 0;

window.speed = false;

window.speedDecrease = false;

window.endingLimit = false;

$().ready(function() {
  $('#arrow').css({
    left: 0,
    top: ($('#roulette_window').height() - $('#arrow').height()) / 2
  });
  autosize($('#alternatives'));
  $('#alternatives').on('change keyup', generateRoulette);
  generateRoulette();
  return doButtonStart();
});

doButtonStart = function() {
  return $('#btn').off().on('click', start).html('START');
};

doButtonStop = function() {
  return $('#btn').off().on('click', stop).html('STOP');
};

doButtonEnable = function() {
  return $('#btn').prop('disabled', false);
};

doButtonDisable = function() {
  return $('#btn').prop('disabled', true);
};

start = function() {
  if (window.speedDecrease !== false) {
    return;
  }
  if (window.timer) {
    clearInterval(window.timer);
  }
  if (window.alternatives.length <= 0) {
    return;
  }
  window.speed = window.CONST.SPEED_RAD;
  window.timer = setInterval(rotateRoulette, 1000 / window.CONST.FPS);
  return doButtonStop();
};

stop = function() {
  var radLength;
  if (window.timer === false) {
    return;
  }
  if (window.speedDecrease !== false) {
    return;
  }
  doButtonDisable();
  radLength = 2 * Math.PI * randf(1.0, 2.0);
  return window.speedDecrease = (window.CONST.SPEED_RAD - window.CONST.SPEED_RAD_ENDING) / radLength;
};

rotateRoulette = function() {
  var increaseRad, now, r;
  r = $('#roulette_join');
  now = +(new Date());
  if (window.speedDecrease !== false && window.endingLimit === false) {
    window.speed -= window.speedDecrease / window.CONST.FPS;
  } else if (window.speedDecrease !== false && now < window.endingLimit) {
    window.speed -= window.speedDecrease / window.CONST.FPS / 2;
  }
  if (window.speed <= window.CONST.SPEED_RAD_ENDING && window.endingLimit === false) {
    return ending();
  }
  if (window.speed <= 0) {
    return result();
  }
  increaseRad = (window.speed / window.CONST.FPS) * (window.CONST.ROLL_DIRECTION_IS_CLOCK ? 1 : -1);
  window.rotate = normalize(window.rotate + increaseRad);
  return r.css('transform', 'rotate(' + window.rotate + 'rad)');
};

ending = function() {
  var now;
  window.speed = window.CONST.SPEED_RAD_ENDING;
  now = +(new Date());
  return window.endingLimit = rand(now + 3000, now + 7000);
};

result = function() {
  if (window.timer) {
    clearInterval(window.timer);
  }
  window.timer = false;
  window.speedDecrease = false;
  window.endingLimit = false;
  doButtonStart();
  return doButtonEnable();
};

generateRoulette = function() {
  var alts, emptyMessage, h, w;
  alts = [];
  emptyMessage = false;
  $('#alternatives').val().split("\n").forEach(function(v) {
    if (v.trim() !== '') {
      return alts.push(v.trim());
    }
  });
  if (alts.length <= 0) {
    emptyMessage = '選択肢を1つ以上\n入れてください';
    alts.push(emptyMessage);
  }
  $('canvas').remove();
  w = $('#roulette_join').width();
  h = $('#roulette_join').height();
  alts.forEach(function(text, index) {
    var baseRad, c, startRad;
    baseRad = 2 * Math.PI / alts.length;
    startRad = 2 * Math.PI * (3 / 4) - (baseRad / 2);
    c = $('<canvas width="' + w + '" height="' + h + '">').css({
      left: 0,
      top: 0,
      transform: 'rotate(' + (baseRad * index) + 'rad)'
    }).drawSlice({
      fillStyle: '#' + Math.floor(Math.random() * 16777215).toString(16),
      x: 0,
      y: 0,
      start: startRad,
      end: startRad + baseRad,
      fromCenter: false,
      inDegrees: false,
      radius: w / 2,
      ccw: false,
      mask: true
    }).drawText({
      fillStyle: '#9cf',
      strokeStyle: '#25a',
      strokeWidth: 2,
      x: 50,
      y: (h - window.CONST.FONT_SIZE) / 2,
      fontSize: window.CONST.FONT_SIZE,
      fontFamily: 'Verdana, sans-serif',
      text: text,
      align: 'left',
      fromCenter: false
    }).restoreCanvas();
    return $('#roulette_join').append(c);
  });
  window.rotate = 0;
  window.speedDecrease = false;
  window.endingLimit = false;
  if (emptyMessage === false) {
    window.alternatives = alts;
  } else {
    window.alternatives = [];
  }
  return true;
};

rand = function(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
};

randf = function(min, max) {
  return Math.random() * (max - min) + min;
};

normalize = function(num, min, max) {
  var range;
  if (min == null) {
    min = 0;
  }
  if (max == null) {
    max = 2 * Math.PI;
  }
  range = Math.abs(max - min);
  if (num < min) {
    num += range * Math.ceil(Math.abs(num - min) / range);
  } else if (max <= num) {
    num -= range * (Math.floor(Math.abs(num - max) / range) + 1);
  }
  return num;
};
