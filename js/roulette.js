// Generated by CoffeeScript 1.12.7
var generateRoulette;

window.CONST = {
  FONT_SIZE: 50
};

$().ready(function() {
  window.canvas = $('#roulette');
  return generateRoulette();
});

generateRoulette = function(alternatives) {
  var alts, c, h, i, index, ref, results, text, w;
  w = $('#roulette').width();
  h = $('#roulette').height();
  c = window.canvas;
  alts = [];
  $('#alternatives').text().split("\n").forEach(function(v) {
    if (v.trim() !== '') {
      return alts.push(v.trim());
    }
  });
  results = [];
  for (index = i = 0, ref = alts.length; 0 <= ref ? i < ref : i > ref; index = 0 <= ref ? ++i : --i) {
    text = '' + alts[index] + (Array(9999).join('ã€€'));
    results.push(c.drawSlice({
      fillStyle: '#' + Math.floor(Math.random() * 16777215).toString(16),
      x: 0,
      y: 0,
      start: 2 * Math.PI * (index / alts.length),
      end: 2 * Math.PI * ((index + 1) / alts.length),
      fromCenter: false,
      inDegrees: false,
      radius: w / 2,
      ccw: false
    }).drawText({
      fillStyle: '#9cf',
      strokeStyle: '#25a',
      strokeWidth: 2,
      x: w / 4,
      y: (h - window.CONST.FONT_SIZE) / 2,
      fontSize: window.CONST.FONT_SIZE,
      fontFamily: 'Verdana, sans-serif',
      text: text,
      align: 'left',
      fromCenter: false,
      rotate: 2 * Math.PI * (index / alts.length),
      inDegrees: false,
      maxWidth: w / 2,
      respectAlign: true
    }).restoreCanvas());
  }
  return results;
};

({
  getMovedPoint: function(p, angle, distance) {
    var x, y;
    x = p[0], y = p[1];
    return [x + Math.abs(distance) * Math.cos(angle), y + Math.abs(distance) * Math.sin(angle)];
  },
  getRotatePoint: function(p, angle, basePoint) {
    var baseX, baseY, movedX, movedY, x, y;
    if (basePoint == null) {
      basePoint = [0, 0];
    }
    x = p[0], y = p[1];
    baseX = basePoint[0], baseY = basePoint[1];
    x -= baseX;
    y -= baseY;
    movedX = x * Math.cos(angle) - y * Math.sin(angle);
    movedY = x * Math.sin(angle) + y * Math.cos(angle);
    return [movedX + baseX, movedY + baseY];
  }
});
