// Generated by CoffeeScript 1.12.7
var d2s, date2string, fillZero, s2d;

window.CONST = {
  TIME_CONVERTER_LEFT_TIMEZONE: 'TIME_CONVERTER_LEFT_TIMEZONE',
  TIME_CONVERTER_RIGHT_TIMEZONE: 'TIME_CONVERTER_RIGHT_TIMEZONE'
};

$().ready(function() {
  var v;
  $('#to_right').on('click', s2d);
  $('#to_left').on('click', d2s);
  v = Utl.getLs(window.CONST.TIME_CONVERTER_LEFT_TIMEZONE);
  if (v !== null) {
    $('#left_timezone').val(v);
  }
  v = Utl.getLs(window.CONST.TIME_CONVERTER_RIGHT_TIMEZONE);
  if (v !== null) {
    $('#right_timezone').val(v);
  }
  $('#left_timezone').on('change', function() {
    return v = Utl.setLs(window.CONST.TIME_CONVERTER_LEFT_TIMEZONE, $('#left_timezone').val());
  });
  return $('#right_timezone').on('change', function() {
    return v = Utl.setLs(window.CONST.TIME_CONVERTER_RIGHT_TIMEZONE, $('#right_timezone').val());
  });
});

s2d = function() {
  var _, dt, hugou, leftH, leftM, ms, plusMin, ref, ref1, rightH, rightM, s;
  ms = $('#milisecond').val();
  s = $('#second').val();
  ref = $('#left_timezone').val().match(/^([+-])(\d{2})\.(\d{2})$/), _ = ref[0], hugou = ref[1], leftH = ref[2], leftM = ref[3];
  plusMin = Number(leftH) * 60 + Number(leftM);
  if (plusMin === '-') {
    plusMin *= -1;
  }
  ms = ms === '' ? s * 1000 : ms;
  ms -= plusMin * 60 * 1000;
  ref1 = $('#right_timezone').val().match(/^([+-])(\d{2})\.(\d{2})$/), _ = ref1[0], hugou = ref1[1], rightH = ref1[2], rightM = ref1[3];
  plusMin = Number(rightH) * 60 + Number(rightM);
  if (plusMin === '-') {
    plusMin *= -1;
  }
  ms += plusMin * 60 * 1000;
  dt = new Date();
  dt.setTime(ms);
  return $('#date').val(date2string(dt));
};

d2s = function() {
  var _, d, date, dt, h, hugou, i, leftH, leftM, m, ms, plusMin, ref, ref1, rightH, rightM, s, y;
  date = $('#date').val().match(/^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})$/);
  if (!date) {
    return window.alert('^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})$ のみ対応');
  }
  _ = date[0], y = date[1], m = date[2], d = date[3], h = date[4], i = date[5], s = date[6];
  dt = new Date();
  dt.setUTCFullYear(Number(y));
  dt.setUTCMonth(Number(m - 1));
  dt.setUTCDate(Number(d));
  dt.setUTCHours(Number(h));
  dt.setUTCMinutes(Number(i));
  dt.setUTCSeconds(Number(s));
  dt.setUTCMilliseconds(0);
  ms = dt.getTime();
  ref = $('#right_timezone').val().match(/^([+-])(\d{2})\.(\d{2})$/), _ = ref[0], hugou = ref[1], rightH = ref[2], rightM = ref[3];
  plusMin = Number(rightH) * 60 + Number(rightM);
  if (plusMin === '-') {
    plusMin *= -1;
  }
  ms -= plusMin * 60 * 1000;
  ref1 = $('#left_timezone').val().match(/^([+-])(\d{2})\.(\d{2})$/), _ = ref1[0], hugou = ref1[1], leftH = ref1[2], leftM = ref1[3];
  plusMin = Number(leftH) * 60 + Number(leftM);
  if (plusMin === '-') {
    plusMin *= -1;
  }
  ms += plusMin * 60 * 1000;
  $('#milisecond').val(ms);
  return $('#second').val(Math.floor(ms / 1000));
};

date2string = function(date) {
  var d, h, i, m, s, y;
  y = date.getUTCFullYear();
  m = date.getUTCMonth() + 1;
  d = date.getUTCDate();
  h = date.getUTCHours();
  i = date.getUTCMinutes();
  s = date.getUTCSeconds();
  return fillZero(y, 4) + '-' + fillZero(m) + '-' + fillZero(d) + ' ' + fillZero(h) + ':' + fillZero(i) + ':' + fillZero(s);
};

fillZero = function(v, digit) {
  if (digit == null) {
    digit = 2;
  }
  return ('000' + v).substr(-digit, digit);
};
